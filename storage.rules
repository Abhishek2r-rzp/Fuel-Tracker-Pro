rules_version = '2';

// Firebase Storage Security Rules
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if file is an image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Helper function to check file size (max 10MB)
    function isValidSize() {
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    // Bill Images - Users can only upload/read/delete their own images
    match /billImages/{userId}/{imageId} {
      // Allow read if authenticated and accessing own images
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow create if authenticated, accessing own folder, valid image, and valid size
      allow create: if isAuthenticated() 
        && request.auth.uid == userId
        && isImage()
        && isValidSize();
      
      // Allow delete if authenticated and accessing own images
      allow delete: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow update if authenticated and accessing own images
      allow update: if isAuthenticated() 
        && request.auth.uid == userId
        && isImage()
        && isValidSize();
    }
    
    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

