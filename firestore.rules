rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Fuel Records Collection
    // Users can only read, create, update, and delete their own fuel records
    match /fuelRecords/{recordId} {
      allow read: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
      
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.keys().hasAll(['userId', 'date', 'amount', 'fuelVolume', 'odometerReading', 'fuelType', 'createdAt'])
        && request.resource.data.amount is number
        && request.resource.data.fuelVolume is number
        && request.resource.data.odometerReading is number;
      
      allow update: if isAuthenticated() 
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;
      
      allow delete: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
    }
    
    // Bike Profiles Collection
    // Users can only read and write their own bike profile
    match /bikeProfiles/{userId} {
      allow read: if isOwner(userId);
      
      allow write: if isOwner(userId)
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

